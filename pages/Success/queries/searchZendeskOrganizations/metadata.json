{
  "pluginType": "API",
  "pluginId": "graphql-plugin",
  "unpublishedAction": {
    "name": "searchZendeskOrganizations",
    "datasource": {
      "name": "Zendesk GraphQL",
      "pluginId": "graphql-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "id": "Zendesk GraphQL",
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Success",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "headers": [
        {
          "key": "content-type",
          "value": "application/json"
        }
      ],
      "autoGeneratedHeaders": [],
      "encodeParamsToggle": true,
      "queryParameters": [],
      "body": "query searchSupportOrganizations($query: String!, $limit: Int, $pageNumber: Int) {\n  search(\n    type: ORGANIZATION\n    limit: $limit\n    query: $query\n    pageNumber: $pageNumber\n  ) {\n    edges {\n      node {\n        ...SupportOrganizationFragment\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      __typename\n    }\n    count\n    __typename\n  }\n}\n\nfragment SupportOrganizationFragment on SupportOrganization {\n  id\n  name\n  domainNames\n  tags\n  createdAt\n  updatedAt\n  __typename\n}\n",
      "httpMethod": "POST",
      "selfReferencingDataPaths": [],
      "pluginSpecifiedTemplates": [
        {
          "value": true
        },
        {
          "value": "{\n    \"query\": {{ Utils.getDomainFromEmail(getSegmentSFContactsByAccId.data.find(item => item.account_id === SFTableData.selectedRow.Id)?.email)}},\n    \"limit\": 25,\n    \"pageNumber\": 1\n}"
        },
        {
          "value": {}
        }
      ],
      "formData": {
        "apiContentType": "application/json"
      }
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "pluginSpecifiedTemplates[1].value"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      " Utils.getDomainFromEmail(getSegmentSFContactsByAccId.data.find(item => item.account_id === SFTableData.selectedRow.Id)?.email)"
    ],
    "userSetOnLoad": true,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": [],
    "createdAt": "2024-06-14T03:54:04Z"
  },
  "id": "Success_searchZendeskOrganizations",
  "deleted": false,
  "gitSyncId": "655b663c44c3196dff1b331d_65673a08f3547d5f6e30fc25"
}